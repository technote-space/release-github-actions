on:
  create:
  repository_dispatch:
    types: [release]

name: Release

jobs:
  release:
    name: Release GitHub Actions
    runs-on: ubuntu-latest
    steps:
      - name: Release GitHub Actions
        uses: technote-space/release-github-actions@gh-actions
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OUTPUT_BUILD_INFO_FILENAME: build.json
          TEST_TAG_PREFIX: test/
          ORIGINAL_TAG_PREFIX: original/
          CLEAN_TEST_TAG: true
      - uses: 8398a7/action-slack@v1
        with:
          type: failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()

  package:
    name: Publish Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ['npm', 'gpr']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 3
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
        if: matrix.target == 'npm'
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com
        if: matrix.target == 'gpr'
      - name: Get Yarn Cache Directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Check package version
        uses: technote-space/package-version-check-action@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_DISABLED: 1
      - name: Install Package dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Publish
        run: |
          if [ -n "$NPM_AUTH_TOKEN" ]; then
            npm config set //registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN
            npm publish
          fi
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        if: matrix.target == 'npm'
      - name: Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.target == 'gpr'
      - uses: 8398a7/action-slack@v1
        with:
          type: failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()

  slack:
    name: Slack
    needs: [release, package]
    runs-on: ubuntu-latest
    steps:
      - uses: 8398a7/action-slack@v1
        with:
          type: success
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
